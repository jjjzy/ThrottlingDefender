worker_processes 1024;

events{
    worker_connections 1024;
}

http {

    log_format upstreamlog '$server_name to: $upstream_addr [$request] '
                            'upstream_response_time $upstream_response_time'
                            ' request_time $request_time';

    upstream notes {
        server localhost:8081;
        server localhost:8082;
    }

    server{
        listen 8080;

#         access_log /logs/nginx-access.log upstreamlog;
        server_name notes;

        location / {
            resolver 127.0.0.1 [::1]:6666;

            default_type text/plain;

            rewrite_by_lua_block{
                ngx.req.read_body()
                local data = ngx.req.get_body_data()
                -- if data then
                    -- ngx.say("body data:")
                    -- ngx.print(data)
                    -- ngx.say("")
                -- end

                local full_url = ngx.var.scheme.."://"..ngx.var.http_host..ngx.var.request_uri
                -- if ngx.var.query_string ~= nil then
                    -- full_url = full_url.."?"..ngx.var.query_string
                -- end
                -- ngx.say(full_url)

                local host, port = "127.0.0.1", 6666
                local sock = ngx.socket.tcp()
                local ok, err2 = sock:connect(host, port)

                sock:settimeout(10)
                -- if not ok then
                    -- ngx.say("failed to connect to localhost 6666: ", err2)
                    -- return
                -- end
                -- ngx.say("successfully connected to localhost 6666!")

                -- ngx.say(ngx.var.remote_addr)

                local bytes, err = sock:send(ngx.var.remote_addr .. " " .. full_url .. "\n")
                -- if not bytes then
                    -- ngx.say("socket send msg has error : ",err)
                -- else
                    -- ngx.say("sended bytes size: " ,bytes)
                -- end

                 local line, err1 = sock:receive()
                 if(line == "false") then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                 end
                 -- if not line then
                     -- ngx.say("failed to read a line: ", err1)
                     -- return
                 -- end
                 -- ngx.say("successfully read a line: ", line)


            }
            proxy_pass http://notes;

        }
    }
}



# export PATH=/usr/local/openresty/nginx/sbin:$PATH

# jiazhen@jiazhen-MS-7B98:~$ which nginx
# /usr/sbin/nginx
# jiazhen@jiazhen-MS-7B98:~$ export PATH=/usr/local/openresty/nginx/sbin:$PATH
# jiazhen@jiazhen-MS-7B98:~$ which nginx
# /usr/local/openresty/nginx/sbin/nginx

